{
  "components": [
    {
      "name": "Button",
      "description": "A versatile button component with multiple variants and states",
      "values": ["clarity", "action", "purpose"],
      "spiritualMeaning": "Represents the power of choice and intentional action in our spiritual journey",
      "projectContext": "Used throughout the application for user interactions and navigation",
      "usageNotes": "Choose the appropriate variant based on the action's importance. Primary for main actions, secondary for supporting actions.",
      "props": {
        "variant": {
          "type": "string",
          "default": "primary",
          "options": ["primary", "secondary", "outline", "ghost"],
          "description": "The visual style variant of the button"
        },
        "size": {
          "type": "string",
          "default": "medium",
          "options": ["small", "medium", "large"],
          "description": "The size of the button"
        },
        "disabled": {
          "type": "boolean",
          "default": false,
          "description": "Whether the button is disabled"
        },
        "onClick": {
          "type": "function",
          "description": "Callback function when button is clicked"
        }
      },
      "examples": [
        {
          "title": "Primary Button",
          "code": "<Button>Click me</Button>"
        },
        {
          "title": "Secondary Button",
          "code": "<Button variant=\"secondary\">Secondary</Button>"
        },
        {
          "title": "Disabled Button",
          "code": "<Button disabled>Disabled</Button>"
        }
      ]
    },
    {
      "name": "Container",
      "description": "A flexible layout container with various spacing and alignment options",
      "values": ["structure", "harmony", "balance"],
      "spiritualMeaning": "Symbolizes the vessel that holds and organizes our spiritual content and experiences",
      "projectContext": "Fundamental layout component used in every screen and component",
      "usageNotes": "Use maxWidth for content that should be constrained, flex for dynamic layouts, and alignCenter for centered content.",
      "props": {
        "maxWidth": {
          "type": "boolean",
          "default": false,
          "description": "Whether to apply max-width constraint"
        },
        "fullHeight": {
          "type": "boolean",
          "default": false,
          "description": "Whether to take full height"
        },
        "flex": {
          "type": "boolean",
          "default": false,
          "description": "Whether to use flexbox layout"
        },
        "alignCenter": {
          "type": "boolean",
          "default": false,
          "description": "Center align content"
        },
        "spaceBetween": {
          "type": "boolean",
          "default": false,
          "description": "Space content between"
        }
      },
      "examples": [
        {
          "title": "Basic Container",
          "code": "<Container>Content here</Container>"
        },
        {
          "title": "Flex Container",
          "code": "<Container flex alignCenter>Flex content</Container>"
        }
      ]
    },
    {
      "name": "Card",
      "description": "A card component for displaying content in a contained area",
      "values": ["containment", "focus", "clarity"],
      "spiritualMeaning": "Represents the sacred space where we hold and present our spiritual insights and experiences",
      "projectContext": "Used for displaying booth information, entries, and other content blocks",
      "usageNotes": "Use lightShadow for subtle elevation, onClick for interactive cards, and ensure proper spacing between cards.",
      "props": {
        "lightShadow": {
          "type": "boolean",
          "default": false,
          "description": "Apply light shadow effect"
        },
        "onClick": {
          "type": "function",
          "description": "Callback when card is clicked"
        },
        "className": {
          "type": "string",
          "description": "Additional CSS classes"
        }
      },
      "examples": [
        {
          "title": "Basic Card",
          "code": "<Card>Card content</Card>"
        },
        {
          "title": "Clickable Card",
          "code": "<Card onClick={handleClick} lightShadow>Clickable card</Card>"
        }
      ]
    },
    {
      "name": "Modal",
      "description": "A modal dialog component for overlaying content",
      "values": ["attention", "focus", "presence"],
      "spiritualMeaning": "Symbolizes the sacred moment of focused attention and divine presence",
      "projectContext": "Used for forms, confirmations, and important user interactions",
      "usageNotes": "Always provide an onClose handler and ensure the modal is accessible. Use for important actions that require user attention.",
      "props": {
        "isOpen": {
          "type": "boolean",
          "default": false,
          "description": "Whether the modal is visible"
        },
        "onClose": {
          "type": "function",
          "description": "Callback when modal should close"
        },
        "bodyClassName": {
          "type": "string",
          "description": "CSS class for modal body"
        }
      },
      "examples": [
        {
          "title": "Basic Modal",
          "code": "<Modal isOpen={isOpen} onClose={handleClose}>Modal content</Modal>"
        }
      ]
    },
    {
      "name": "Input",
      "description": "A text input component with various states and validation",
      "values": ["receptivity", "clarity", "expression"],
      "spiritualMeaning": "Represents the gateway through which we receive and express divine wisdom",
      "projectContext": "Used in forms throughout the application for user input",
      "usageNotes": "Always provide clear placeholder text and appropriate validation. Use type='email' for email inputs and consider accessibility.",
      "props": {
        "type": {
          "type": "string",
          "default": "text",
          "options": ["text", "email", "password", "number"],
          "description": "Input type"
        },
        "placeholder": {
          "type": "string",
          "description": "Placeholder text"
        },
        "value": {
          "type": "string",
          "description": "Input value"
        },
        "onChange": {
          "type": "function",
          "description": "Callback when input value changes"
        },
        "disabled": {
          "type": "boolean",
          "default": false,
          "description": "Whether input is disabled"
        }
      },
      "examples": [
        {
          "title": "Text Input",
          "code": "<Input placeholder=\"Enter text\" value={value} onChange={handleChange} />"
        },
        {
          "title": "Email Input",
          "code": "<Input type=\"email\" placeholder=\"Enter email\" />"
        }
      ]
    },
    {
      "name": "Title",
      "description": "A title component for headings with various sizes",
      "values": ["hierarchy", "clarity", "authority"],
      "spiritualMeaning": "Represents the divine order and the sacred hierarchy of spiritual knowledge",
      "projectContext": "Used for page headings, section titles, and content hierarchy",
      "usageNotes": "Use appropriate heading levels for semantic HTML. H1 for main page titles, H2 for sections, etc.",
      "props": {
        "level": {
          "type": "number",
          "default": 1,
          "options": [1, 2, 3, 4, 5, 6],
          "description": "Heading level (h1-h6)"
        },
        "className": {
          "type": "string",
          "description": "Additional CSS classes"
        }
      },
      "examples": [
        {
          "title": "H1 Title",
          "code": "<Title>Main Heading</Title>"
        },
        {
          "title": "H2 Title",
          "code": "<Title level={2}>Sub Heading</Title>"
        }
      ]
    },
    {
      "name": "Text",
      "description": "A text component for displaying content with various styles",
      "values": ["communication", "clarity", "expression"],
      "spiritualMeaning": "Represents the divine word and the sacred transmission of spiritual wisdom",
      "projectContext": "Used for all text content throughout the application",
      "usageNotes": "Choose the appropriate variant for the context. Use 'body' for main content, 'caption' for small text, 'error' for error messages.",
      "props": {
        "variant": {
          "type": "string",
          "default": "body",
          "options": ["body", "caption", "label", "error"],
          "description": "Text variant style"
        },
        "className": {
          "type": "string",
          "description": "Additional CSS classes"
        }
      },
      "examples": [
        {
          "title": "Body Text",
          "code": "<Text>Regular body text</Text>"
        },
        {
          "title": "Caption Text",
          "code": "<Text variant=\"caption\">Small caption text</Text>"
        }
      ]
    },
    {
      "name": "Stamp",
      "description": "A timestamp display component",
      "values": ["time", "presence", "moment"],
      "spiritualMeaning": "Represents the sacred moment and the divine timing of spiritual experiences",
      "projectContext": "Used to display creation and modification timestamps throughout the application",
      "usageNotes": "Always provide a valid timestamp. The component handles formatting automatically.",
      "props": {
        "timestamp": {
          "type": "string|Date",
          "description": "Timestamp to display"
        },
        "format": {
          "type": "string",
          "description": "Date format string"
        }
      },
      "examples": [
        {
          "title": "Basic Stamp",
          "code": "<Stamp timestamp={new Date()} />"
        },
        {
          "title": "Custom Format",
          "code": "<Stamp timestamp={timestamp} format=\"MMM DD, YYYY\" />"
        }
      ]
    },
    {
      "name": "Loader",
      "description": "A loading spinner component",
      "values": ["patience", "trust", "process"],
      "spiritualMeaning": "Symbolizes the sacred waiting and trust in divine timing and process",
      "projectContext": "Used during data loading, form submissions, and async operations",
      "usageNotes": "Use to indicate that a process is happening. Provide appropriate size and color for the context.",
      "props": {
        "size": {
          "type": "string",
          "default": "medium",
          "options": ["small", "medium", "large"],
          "description": "Size of the loader"
        },
        "color": {
          "type": "string",
          "description": "Color of the loader"
        }
      },
      "examples": [
        {
          "title": "Default Loader",
          "code": "<Loader />"
        },
        {
          "title": "Large Loader",
          "code": "<Loader size=\"large\" color=\"blue\" />"
        }
      ]
    },
    {
      "name": "Screen",
      "description": "A full-screen container component",
      "values": ["wholeness", "presence", "immersion"],
      "spiritualMeaning": "Represents the complete sacred space and the full immersion in spiritual experience",
      "projectContext": "Used as the root container for all main application screens",
      "usageNotes": "Use as the outermost container for full-screen pages. Provides consistent layout and spacing.",
      "props": {
        "className": {
          "type": "string",
          "description": "Additional CSS classes"
        },
        "children": {
          "type": "node",
          "description": "Content to render inside the screen"
        }
      },
      "examples": [
        {
          "title": "Basic Screen",
          "code": "<Screen>Full screen content</Screen>"
        }
      ]
    }
  ]
} 