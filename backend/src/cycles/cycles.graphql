type Query {
  currentCycle(boothId: String): Cycle
  cycles(boothId: String, feedParams: FeedParams): CycleFeed
}

type Mutation {
  upsertCycle(input: CycleInput, id: String): Cycle
  completeCycle(id: String): Cycle
  addGatewayToCycle(cycleId: String, gatewayId: String): Cycle
}

type SabbaticalGateway {
  gateway: Gateway
}

type CycleFeed {
  entities: [Cycle]
  info: FeedInfo
}

type Cycle {
  id: String
  name: String
  text: String
  createdAt: String
  updatedAt: String
  boothId: String
  completed: String
  a: Gateway
  b: Gateway
  c: Gateway
  d: Gateway
  e: Gateway
  f: Gateway
  sabbatical: SabbaticalGateway
  stamps: Stamps
}

input CycleInput {
  name: String
  text: String
  boothId: String
  a: String
  b: String
  c: String
  d: String
  e: String
  f: String
  activateCycle: Boolean
}