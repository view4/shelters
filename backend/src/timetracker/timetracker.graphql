type Query {
  dedicatedTimes(boothId: String, parentId: String, feedParams: FeedParams): DedicatedTimeFeed
  trackedTimes(dedicatedTimeId: String, feedParams: FeedParams): TrackedTimeFeed
}

type Mutation {
  trackTime(input: TrackedTimeInput): TrackedTime
  upsertDedicatedTime(input: DedicatedTimeInput, id: String): DedicatedTime
  removeTrackedTime(id: String): Boolean
}

type DedicatedTimeFeed {
  entities: [DedicatedTime]
  info: FeedInfo
}

type TrackedTimeFeed {
  entities: [TrackedTime]
  info: FeedInfo
}

type DedicatedTime {
  id: String
  name: String
  text: String
  createdAt: String
  updatedAt: String
  mins: Int
  children: [DedicatedTime]
  trackedTime: Int
  booth: String
  totalMins: Int
  trackedTimes: [TrackedTime]
}

type TrackedTime {
  id: String
  createdAt: String
  updatedAt: String
  mins: Int
  text: String
  dedicatedTimeId: String
}

input TrackedTimeInput {
  mins: Int
  dedicatedTimeId: String
  text: String
}

input DedicatedTimeInput {
  name: String
  text: String
  parentId: String
  mins: Int
  boothId: String
}
